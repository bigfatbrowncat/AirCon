package il.aircon.view;

import il.aircon.controller.OrdersManager;
import il.aircon.model.Order;
import il.aircon.model.Order.StateType;

import java.io.IOException;
import java.io.PrintWriter;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

/**
 * Servlet implementation class ListOrders
 */
@WebServlet(description = "Shows a table containing the current orders", urlPatterns = { "/" })
public class ListOrders extends HttpServlet {
	private static final long serialVersionUID = 1L;
       
    /**
     * @see HttpServlet#HttpServlet()
     */
    public ListOrders() {
        super();
        // TODO Auto-generated constructor stub
    }
/*
    private void printForm(
    		PrintWriter pw, 
    		String searchRequest)
    {
		pw.printf("<html><head>");
		pw.printf("<title>–ü–æ–∏—?–∫ –∑–∞–∫–∞–∑–∞</title>\n");

		pw.printf("<form method=\"get\">\n");
		pw.printf("<input name=\"search\" value=\"%1$s\"/> <input style=\"padding: 2px; margin: 2px; margin-top: 5px; \"type=\"submit\" value=\"–ò—?–∫–∞—Ç—å\" />", searchRequest);
		pw.printf("</form>\n");
		
		pw.printf("<table>\n");

		pw.printf("<tr>\n");
		pw.printf("<td style=\"width: 300pt\">–°–æ—?—Ç–æ—?–Ω–∏–µ –∑–∞–∫–∞–∑–∞:</td>");
		
		boolean new_selected = false, after_insp_selected = false;
		if (state == StateType.STATE_NEW)
		{
			new_selected = true;
		}
		else if (state == StateType.STATE_AFTER_INSPECTION)
		{
			after_insp_selected = true;
		}
		else
			throw new UnsupportedOrderState(state);
			
		
		pw.printf("<td><select id=\"state\" name=\"state\" onchange=\"check_additional();\" style=\"width: 250pt\">");
		pw.printf("<option value=\"new\" %1$s>–?–æ–≤—ã–π</option>", new_selected ? "selected" : "");
		pw.printf("<option value=\"after_insp\" %1$s>–û—?–º–æ—Ç—Ä –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω</option>", after_insp_selected ? "selected" : "");
		pw.printf("</select></td>");
		pw.printf("</tr>\n");
		
		pw.printf("<tr id=\"productManufacturerAndModel_row\" >\n");
		pw.printf("<td>–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å –∏ –º–æ–¥–µ–ª—å:</td> <td><input style=\"width: 250pt\" name=\"productManufacturerAndModel\" id=\"productManufacturerAndModel\" type=\"text\" value=\"%1$s\" /></td>", productManufacturerAndModel);
		pw.printf("</tr>\n");

		pw.printf("<tr id=\"customerName_row\">\n");
		pw.printf("<td>–?–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –∑–∞–∫–∞–∑—á–∏–∫–∞:</td> <td><input style=\"width: 250pt\" name=\"customerName\" id=\"customerName\" type=\"text\" value=\"%1$s\" /></td>", customerName);
		pw.printf("</tr>\n");

		pw.printf("<tr id=\"targetAddress_row\">\n");
		pw.printf("<td>–?–¥—Ä–µ—? –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—? —Ä–∞–±–æ—Ç:</td> <td><input style=\"width: 250pt\" name=\"targetAddress\" id=\"targetAddress\" type=\"text\" value=\"%1$s\" /></td>", targetAddress);
		pw.printf("</tr>\n");

		pw.printf("<tr id=\"pipeLineLength_row\" style=\"visibility: hidden\">\n");
		pw.printf("<td>–î–ª–∏–Ω–∞ –º–∞–≥–∏—?—Ç—Ä–∞–ª–∏ –º–µ–∂–¥—É –±–ª–æ–∫–∞–º–∏:</td> <td><input %2$s style=\"width: 250pt\" name=\"pipeLineLength\" id=\"pipeLineLength\" type=\"text\" value=\"%1$s\" />, <b>–º</b></td>", 
				pipeLineLength, 
				pipeLineLength_incorrect ? "class=\"incorrect\"" : "");
		pw.printf("</tr>\n");

		pw.printf("<tr id=\"additionalCoolantAmount_row\" style=\"visibility: hidden\">\n");
		pw.printf("<td>–ö–æ–ª–∏—á–µ—?—Ç–≤–æ –¥–æ–∑–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ —Ö–ª–∞–¥–∞–≥–µ–Ω—Ç–∞:</td> <td><input %2$s style=\"width: 250pt\" name=\"additionalCoolantAmount\" id=\"additionalCoolantAmount\" type=\"text\" value=\"%1$s\" />, <b>–∫–≥</b></td>", 
				additionalCoolantAmount, 
				additionalCoolantAmount_incorrect ? "class=\"incorrect\"" : "");
		pw.printf("</tr>\n");

		pw.printf("<tr id=\"pumpNeeded_row\" style=\"visibility: hidden\">\n");
		pw.printf("<td>–?–µ–æ–±—Ö–æ–¥–∏–º–∞ —É—?—Ç–∞–Ω–æ–≤–∫–∞ –¥—Ä–µ–Ω–∞–∂–Ω–æ–π –ø–æ–º–ø—ã:</td><td><input style=\"width: 250pt\" name=\"pumpNeeded\" id=\"pumpNeeded\" type=\"checkbox\" %1$s></td>", (pumpNeeded ? "checked" : ""));
		pw.printf("</tr>\n");
		pw.printf("</table>\n");

		if (incorrect_input_message != null && !incorrect_input_message.equals(""))
		{
			pw.printf("<p class=\"incorrect_input_msg\"><b>–?–µ–≤–µ—Ä–Ω—ã–π –≤–≤–æ–¥: </b>%1$s</p>\n", incorrect_input_message);		
		}
		
		pw.println("<input style=\"padding: 2px; margin: 2px; margin-top: 5px; \"type=\"submit\" value=\"–ü—Ä–∏–Ω—?—Ç—å –∑–∞–∫–∞–∑\" />");		
		
		pw.printf("</form>");
		pw.printf("</body>");
		pw.printf("<script language=\"javascript\">\n");
		pw.printf("check_additional();\n");
		pw.printf("</script>");
		pw.printf("</html>");    	
    }    
    */
	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		
		
		Order[] orders = OrdersManager.Search("qwe asd");
		
	}

}
